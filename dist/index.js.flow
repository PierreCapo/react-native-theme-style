/**
 * Flowtype definitions for index
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.8.3
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

import * as React from "react";
import { TextStyle, ViewStyle, ImageStyle, StyleSheet } from "react-native";
declare type IStyle = TextStyle | ViewStyle | ImageStyle;
declare type IFunctionalStyle<T, K> = (theme: T, optionalObject: K) => IStyle;
export interface ThemeStyle<T, K = {}> {
  [key: string]: IStyle | IFunctionalStyle<T, K>;
}
declare type StyleType<O> =
  | StyleSheet.NamedStyles<any>
  | StyleSheet.NamedStyles<O>;
declare interface IStyles<K> {
  [key: string]: StyleType<K>;
}
/**
 * Configure the theme by using a context
 */
declare export function configureTheme<T>(
  context: React.Context<T>
): <O: IStyles<any>, T_1>(
  styles: O,
  params?: T_1 | void
) => $ObjMapi<O, <P>(P) => any>;
declare export {};
